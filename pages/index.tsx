import React, { useState, useEffect } from "react";
import {
  Button,
  Row,
  Col,
  Container,
  Navbar,
  Nav,
  InputGroup,
  FormControl,
} from "react-bootstrap";

export default function Score() {
  const [userNum, setUsernum] = useState("");
  const [sumScore, setSumscore] = useState<Array<string>>(["", "", "", "", ""]);
  const [money, setMoney] = useState<Array<string>>([]);

  const handleClick = () => {
    const allScore = sumScore.reduce((x, y) => String(Number(x) + Number(y)));
    const avgScore = Math.round(Number(allScore) / Number(userNum));
    console.log("avgScore: ", avgScore);
    let tmp = [];

    for (let i = 0; i < Number(userNum); i++) {
      let subScore = avgScore - Number(sumScore[i]);
      console.log("subScore", i, ": ", subScore);
      tmp[i] = String(subScore * 200);
    }

    setMoney(tmp);
  };

  const moneyList = money.map((money, index) => (
    <Col key={index}>
      <h6 className="d-flex justify-content-center">
        P{index + 1}: {money}
      </h6>
    </Col>
  ));

  const handleChange = (e: any) => {
    setUsernum(e.target.value);
  };

  return (
    <Container fluid>
      <head>
        <title>Ppong</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </head>
      <Row>
        <Navbar bg="dark" variant="dark">
          <Navbar.Brand href="/">Ppong</Navbar.Brand>
          <Nav className="me-auto">
            <Nav.Link href="/">Score & Money</Nav.Link>
          </Nav>
        </Navbar>
      </Row>

      <br />

      <Row>
        <h1 className="text-center">Score & Money</h1>
      </Row>

      <Row className="align-content-center">
        <Col
          sm="auto"
          className="d-flex justify-content-center align-items-center">
          User Number:
        </Col>
        <Col sm lg="1">
          <InputGroup>
            <FormControl value={userNum} onChange={handleChange} />
          </InputGroup>
        </Col>
      </Row>

      <br />

      <InputForm row_num="1" sumScore={sumScore} setSumscore={setSumscore} />
      <InputForm row_num="2" sumScore={sumScore} setSumscore={setSumscore} />
      <InputForm row_num="3" sumScore={sumScore} setSumscore={setSumscore} />
      <InputForm row_num="4" sumScore={sumScore} setSumscore={setSumscore} />
      <InputForm row_num="5" sumScore={sumScore} setSumscore={setSumscore} />

      <Row>{moneyList}</Row>
      <Row>
        <Col className="d-flex justify-content-center">
          <Button onClick={handleClick}>Game End</Button>
        </Col>
      </Row>
    </Container>
  );
}

function InputForm(props: any) {
  const [score, setScore] = useState<Array<string>>(
    [...Array(10)].map((_, i) => "")
  );
  const [sum, setSum] = useState("");

  const HandleChange = (e: any, col_num: number) => {
    let tmp = score;
    tmp[col_num] = e.target.value;
    if (tmp !== score) {
      setScore(tmp);
    }

    sumScore();
  };

  const sumScore = () => {
    const tmp = score.reduce((x, y) => String(Number(x) + Number(y)));
    setSum(tmp);
  };

  useEffect(() => {
    let tmp = [...props.sumScore];
    tmp[Number(props.row_num) - 1] = sum;
    props.setSumscore(tmp);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [sum]);

  return (
    <Row>
      <h6>
        P{props.row_num}의 현재 점수: {sum}
      </h6>
      <InputGroup className="mb-3">
        <InputGroup.Text>P{props.row_num}</InputGroup.Text>
        <FormControl value={score[0]} onChange={(e) => HandleChange(e, 0)} />
        <FormControl value={score[1]} onChange={(e) => HandleChange(e, 1)} />
        <FormControl value={score[2]} onChange={(e) => HandleChange(e, 2)} />
        <FormControl value={score[3]} onChange={(e) => HandleChange(e, 3)} />
        <FormControl value={score[4]} onChange={(e) => HandleChange(e, 4)} />
        <FormControl value={score[5]} onChange={(e) => HandleChange(e, 5)} />
        <FormControl value={score[6]} onChange={(e) => HandleChange(e, 6)} />
        <FormControl value={score[7]} onChange={(e) => HandleChange(e, 7)} />
        <FormControl value={score[8]} onChange={(e) => HandleChange(e, 8)} />
        <FormControl value={score[9]} onChange={(e) => HandleChange(e, 9)} />
      </InputGroup>
    </Row>
  );
}
